{"version":3,"file":"static/js/337.bf2515bb.chunk.js","mappings":"oOACA,EAAuB,yBAAvB,EAAyD,2BAAzD,EAA4F,0B,SCG/EA,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OACE,0BACE,kBAAMC,UAAWC,EAAYL,SAPZ,SAAAM,GACnBA,EAAMC,iBACNP,EAASE,EAAMM,OAChB,EAIwDC,OAAO,SAA5D,WACE,4BACE,kBACEL,UAAWC,EACXK,SAfgB,SAAAJ,GACxBH,EAASG,EAAMK,OAAOC,MACvB,EAcSC,KAAK,OACLC,YAAY,sBACZF,MAAOV,OAGX,mBAAQE,UAAWC,EAAcQ,KAAK,SAAtC,wBAMP,E,mCC+BD,EA3DmB,WACjB,OAA0BZ,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOc,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAASF,EAAaG,IAAI,WAEhCC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAEQC,EAAAA,EAAAA,IAAiBJ,GAFzB,gBAEPK,EAFO,EAEPA,KACRxB,EAASwB,EAAKC,SAHC,gDAKfC,QAAQC,IAAR,MACAd,EAAS,KAAMe,SANA,yDAAH,qDASZT,GACFG,GAEH,GAAE,CAACH,IAEJ,IAMMU,EAAW9B,EAAM+B,KAAI,SAAAC,GAAO,OAChC,eAAI9B,UAAWC,EAAAA,EAAAA,MAAf,UACE,UAAC,KAAD,CAAM8B,GAAE,sBAAiBD,EAAQE,IAAMlC,MAAOe,EAA9C,WACE,gBACEb,UAAWC,EAAAA,EAAAA,OACXgC,IAAG,yCAAoCH,EAAQI,aAC/CC,IAAKL,EAAQM,SAGf,cAAGpC,UAAWC,EAAAA,EAAAA,KAAd,SAA2B6B,EAAQM,YARNN,EAAQE,GADT,IAclC,OACE,iCACE,SAACrC,EAAD,CAAYC,SAtBO,SAAAsB,GACjBA,GACFD,EAAgB,CAAEC,OAAAA,GAErB,IAmBIP,GACC,eAAGX,UAAWC,EAAAA,EAAAA,MAAd,UACGU,EADH,KACU,kBADV,+CAKA,eAAIX,UAAWC,EAAAA,EAAAA,KAAf,SAA4B2B,MAInC,C,2JC7DKS,E,OAAgBC,EAAAA,OAAa,CACjCC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAS,WAIAC,EAAY,kBAAMN,EAAclB,IAAI,sBAAxB,EAEZyB,EAAe,SAAAZ,GAAE,OAAIK,EAAclB,IAAd,iBAA4Ba,GAAhC,EAEjBa,EAAc,SAAAb,GAAE,OAAIK,EAAclB,IAAd,iBAA4Ba,EAA5B,YAAJ,EAEhBc,EAAiB,SAAAd,GAAE,OAAIK,EAAclB,IAAd,iBAA4Ba,EAA5B,YAAJ,EAEnBV,EAAmB,SAAAyB,GAAK,OACnCV,EAAclB,IAAd,8BAAyC4B,GADN,C,oBCjBrC,KAAgB,KAAO,uBAAuB,OAAS,yBAAyB,KAAO,uBAAuB,MAAQ,wBAAwB,MAAQ,wB","sources":["webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/MoviesPage/MoviesPage.jsx","services/movieAPI.js","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__o80os\",\"button\":\"SearchForm_button__UXY06\",\"input\":\"SearchForm_input__HOxJo\"};","import { useState } from 'react';\nimport style from './SearchForm.module.css';\nimport PropTypes from 'prop-types';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [state, setState] = useState(``);\n\n  const handleInputChange = event => {\n    setState(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(state.trim());\n  };\n\n  return (\n    <div>\n      <form className={style.form} onSubmit={handleSubmit} action=\"submit\">\n        <label>\n          <input\n            className={style.input}\n            onChange={handleInputChange}\n            type=\"text\"\n            placeholder=\"Enter movie name...\"\n            value={state}\n          />\n        </label>\n        <button className={style.button} type=\"submit\">\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useState, useEffect } from 'react';\nimport { getMovieBySearch } from 'services/movieAPI';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport style from '../HomePage/HomePage.module.css';\n\nconst MoviesPage = () => {\n  const [state, setState] = useState([]);\n  const [error, setError] = useState('');\n\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const search = searchParams.get('search');\n\n  useEffect(() => {\n    const getResults = async () => {\n      try {\n        const { data } = await getMovieBySearch(search);\n        setState(data.results);\n      } catch (error) {\n        console.log(error);\n        setError(error.message);\n      }\n    };\n    if (search) {\n      getResults();\n    }\n  }, [search]);\n\n  const getSearchValue = search => {\n    if (search) {\n      setSearchParams({ search });\n    }\n  };\n\n  const elements = state.map(element => (\n    <li className={style.movie} key={element.id}>\n      <Link to={`/moviespage/${element.id}`} state={location}>\n        <img\n          className={style.poster}\n          src={`https://image.tmdb.org/t/p/w500${element.poster_path}`}\n          alt={element.title}\n        />\n\n        <p className={style.link}>{element.title}</p>\n      </Link>\n    </li>\n  ));\n\n  return (\n    <>\n      <SearchForm onSubmit={getSearchValue} />\n      {error ? (\n        <p className={style.error}>\n          {error} <br />\n          Something gone wrong, try again later...\n        </p>\n      ) : (\n        <ul className={style.list}>{elements}</ul>\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst movieInstance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0b81ec7b97ebe28b2ec2748d1e4054f2',\n    language: `en-US`,\n  },\n});\n\nexport const getMovies = () => movieInstance.get('/trending/movie/day');\n\nexport const getMovieByID = id => movieInstance.get(`/movie/${id}`);\n\nexport const getCastByID = id => movieInstance.get(`/movie/${id}/credits`);\n\nexport const getReviewsByID = id => movieInstance.get(`/movie/${id}/reviews`);\n\nexport const getMovieBySearch = query =>\n  movieInstance.get(`/search/movie?query=${query}`);\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"HomePage_list__99c8-\",\"poster\":\"HomePage_poster__+X7mT\",\"link\":\"HomePage_link__-d+Of\",\"movie\":\"HomePage_movie__eYKzz\",\"error\":\"HomePage_error__gqYMJ\"};"],"names":["SearchForm","onSubmit","useState","state","setState","className","style","event","preventDefault","trim","action","onChange","target","value","type","placeholder","error","setError","location","useLocation","useSearchParams","searchParams","setSearchParams","search","get","useEffect","getResults","getMovieBySearch","data","results","console","log","message","elements","map","element","to","id","src","poster_path","alt","title","movieInstance","axios","baseURL","params","api_key","language","getMovies","getMovieByID","getCastByID","getReviewsByID","query"],"sourceRoot":""}