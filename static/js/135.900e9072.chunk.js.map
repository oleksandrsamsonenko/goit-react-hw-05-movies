{"version":3,"file":"static/js/135.900e9072.chunk.js","mappings":"8PACA,EAAyB,6BAAzB,EAA6D,2BAA7D,EAAgG,4BAAhG,EAAqI,6BAArI,EAA6K,+BAA7K,EAAmN,2B,SCoGnN,EA1FqB,WAAO,IAAD,IACzB,GAA0BA,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAOH,GAErBI,EACJ,oBAAGF,EAAYG,QAAQX,aAAvB,aAAG,EAA2BY,UAA9B,iBAAyCJ,EAAYG,QAAQX,aAA7D,aAAyC,EAA2Ba,SACpE,KAIFC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,oIAEUC,EAAAA,EAAAA,IAAad,GAFvB,gBAELe,EAFK,EAELA,KAENC,EAMED,EANFC,MACAC,EAKEF,EALFE,SACAC,EAIEH,EAJFG,aACAC,EAGEJ,EAHFI,aACAC,EAEEL,EAFFK,YACAC,EACEN,EADFM,OAEIC,EAAaD,EAAOE,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAA9B,KACbC,EAAO,IAAIC,KAAKT,GAChBU,EAAWF,EAAKG,cAChBC,EAASC,KAAKC,KAAoB,GAAff,GACzBnB,EAAS,CACPiB,MAAAA,EACAC,SAAAA,EACAc,OAAAA,EACAF,SAAAA,EACAT,YAAAA,EACAE,WAAAA,IArBW,4GAAH,qDAyBdT,GACD,GAAE,CAACb,IAEJ,IAAQgB,EAA+DlB,EAA/DkB,MAAOC,EAAwDnB,EAAxDmB,SAAUc,EAA8CjC,EAA9CiC,OAAQF,EAAsC/B,EAAtC+B,SAAUT,EAA4BtB,EAA5BsB,YAAaE,EAAexB,EAAfwB,WAExD,OACE,iCACE,iBAAKY,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXC,IAAG,yCAAoChB,GACvCiB,IAAKrB,EACLsB,MAAM,SAER,iBAAKJ,UAAWC,EAAhB,WACE,0BACGnB,EADH,KACYa,EADZ,QAGA,wCAAgBE,EAAhB,QACA,sCACA,uBAAId,KACJ,oCACA,uBAAIK,KACJ,mBACEY,UAAWC,EACXI,KAAK,SACLC,QAAS,kBAAMtC,EAASM,EAAf,EAHX,4BASJ,iBAAK0B,UAAWC,EAAhB,WACE,oDACA,yBACE,SAAC,KAAD,CAASD,UAAWC,EAAYM,GAAE,OAAlC,qBAIF,yBACE,SAAC,KAAD,CAASP,UAAWC,EAAYM,GAAE,UAAlC,2BAKJ,SAAC,KAAD,MAGL,C,2JCjGKC,E,OAAgBC,EAAAA,OAAa,CACjCC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAS,WAIAC,EAAY,kBAAMN,EAAcO,IAAI,sBAAxB,EAEZnC,EAAe,SAAAoC,GAAE,OAAIR,EAAcO,IAAd,iBAA4BC,GAAhC,EAEjBC,EAAc,SAAAD,GAAE,OAAIR,EAAcO,IAAd,iBAA4BC,EAA5B,YAAJ,EAEhBE,EAAiB,SAAAF,GAAE,OAAIR,EAAcO,IAAd,iBAA4BC,EAA5B,YAAJ,EAEnBG,EAAmB,SAAAC,GAAK,OACnCZ,EAAcO,IAAd,8BAAyCK,GADN,C","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/movieAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieDetails_button__uXZxd\",\"info\":\"MovieDetails_info__qv2SI\",\"about\":\"MovieDetails_about__8ZMko\",\"poster\":\"MovieDetails_poster__yO7gD\",\"moreinfo\":\"MovieDetails_moreinfo__9w1Nk\",\"link\":\"MovieDetails_link__U+v+7\"};","import { useState, useEffect, useRef } from 'react';\nimport {\n  useParams,\n  useNavigate,\n  useLocation,\n  Outlet,\n  NavLink,\n} from 'react-router-dom';\nimport { getMovieByID } from 'services/movieAPI';\nimport style from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [state, setState] = useState({});\n  const { movieID } = useParams();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const refLocation = useRef(location);\n\n  const from =\n    `${refLocation.current.state?.pathname}${refLocation.current.state?.search}` ||\n    '/';\n\n  //   console.log(`DETAILS LOCATION`, location);\n\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        const { data } = await getMovieByID(movieID);\n        const {\n          title,\n          overview,\n          vote_average,\n          release_date,\n          poster_path,\n          genres,\n        } = data;\n        const genresInfo = genres.map(item => item.name).join(` `);\n        const year = new Date(release_date);\n        const fullYear = year.getFullYear();\n        const rating = Math.ceil(vote_average * 10);\n        setState({\n          title,\n          overview,\n          rating,\n          fullYear,\n          poster_path,\n          genresInfo,\n        });\n      } catch (error) {}\n    };\n    getMovie();\n  }, [movieID]);\n\n  const { title, overview, rating, fullYear, poster_path, genresInfo } = state;\n\n  return (\n    <>\n      <div className={style.info}>\n        <img\n          className={style.poster}\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n          width=\"450\"\n        />\n        <div className={style.about}>\n          <h2>\n            {title} ({fullYear})\n          </h2>\n          <p>User Score: {rating}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genresInfo}</p>\n          <button\n            className={style.button}\n            type=\"button\"\n            onClick={() => navigate(from)}\n          >\n            Go back\n          </button>\n        </div>\n      </div>\n      <div className={style.moreinfo}>\n        <h3>Additional information</h3>\n        <li>\n          <NavLink className={style.link} to={`cast`}>\n            Cast\n          </NavLink>\n        </li>\n        <li>\n          <NavLink className={style.link} to={`reviews`}>\n            Reviews\n          </NavLink>\n        </li>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst movieInstance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0b81ec7b97ebe28b2ec2748d1e4054f2',\n    language: `en-US`,\n  },\n});\n\nexport const getMovies = () => movieInstance.get('/trending/movie/day');\n\nexport const getMovieByID = id => movieInstance.get(`/movie/${id}`);\n\nexport const getCastByID = id => movieInstance.get(`/movie/${id}/credits`);\n\nexport const getReviewsByID = id => movieInstance.get(`/movie/${id}/reviews`);\n\nexport const getMovieBySearch = query =>\n  movieInstance.get(`/search/movie?query=${query}`);\n\n//   https://api.themoviedb.org/3/search/movie?api_key=0b81ec7b97ebe28b2ec2748d1e4054f2&query=batman\n"],"names":["useState","state","setState","movieID","useParams","navigate","useNavigate","location","useLocation","refLocation","useRef","from","current","pathname","search","useEffect","getMovie","getMovieByID","data","title","overview","vote_average","release_date","poster_path","genres","genresInfo","map","item","name","join","year","Date","fullYear","getFullYear","rating","Math","ceil","className","style","src","alt","width","type","onClick","to","movieInstance","axios","baseURL","params","api_key","language","getMovies","get","id","getCastByID","getReviewsByID","getMovieBySearch","query"],"sourceRoot":""}