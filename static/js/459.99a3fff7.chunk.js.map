{"version":3,"file":"static/js/459.99a3fff7.chunk.js","mappings":"sPACA,EAAuB,mBAAvB,EAAqD,uBAArD,EAAoF,oBAApF,EAA+G,mB,kBCsC/G,EAjCa,WACX,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SACRE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEOC,EAAAA,EAAAA,IAAYJ,GAFnB,OAEVK,EAFU,OAIhBN,EAASM,EAASC,KAAKC,MAJP,gDAMhBC,QAAQC,IAAR,MANgB,yDAAH,qDASjBN,GACD,GAAE,CAACH,IAEJ,IAAMU,EAAWZ,EAAMa,KAAI,SAAAC,GACzB,IAAMC,EAAUD,EAAQE,aAAR,yCACsBF,EAAQE,cAC1CC,EACJ,OACE,gBAAIC,UAAWC,EAAf,WACE,gBAAKD,UAAWC,EAAaC,IAAKL,EAASM,IAAKP,EAAQQ,QACxD,cAAGJ,UAAWC,EAAd,UACE,uBAAIL,EAAQQ,UAEd,cAAGJ,UAAWC,EAAd,SAA2BL,EAAQS,cALLT,EAAQU,UAQ3C,IACD,OAAO,eAAIN,UAAWC,EAAf,SAAgCP,GACxC,C,2JCnCKa,E,OAAgBC,EAAAA,OAAa,CACjCC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAS,WAIAC,EAAY,kBAAMN,EAAcO,IAAI,sBAAxB,EAEZC,EAAe,SAAAC,GAAE,OAAIT,EAAcO,IAAd,iBAA4BE,GAAhC,EAEjB5B,EAAc,SAAA4B,GAAE,OAAIT,EAAcO,IAAd,iBAA4BE,EAA5B,YAAJ,EAEhBC,EAAiB,SAAAD,GAAE,OAAIT,EAAcO,IAAd,iBAA4BE,EAA5B,YAAJ,EAEnBE,EAAmB,SAAAC,GAAK,OACnCZ,EAAcO,IAAd,8BAAyCK,GADN,C","sources":["webpack://react-homework-template/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx","services/movieAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Cast_item__vxHbm\",\"castlist\":\"Cast_castlist__EikwL\",\"photo\":\"Cast_photo__qf46v\",\"text\":\"Cast_text__jl3u+\"};","import { getCastByID } from 'services/movieAPI';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport style from './Cast.module.css';\nimport placeholder from '../../images/placeholder.jpg';\n\nconst Cast = () => {\n  const [state, setState] = useState([]);\n  const { movieID } = useParams();\n  useEffect(() => {\n    const getCastInfo = async () => {\n      try {\n        const response = await getCastByID(movieID);\n        // console.log(response.data.cast);\n        setState(response.data.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getCastInfo();\n  }, [movieID]);\n\n  const elements = state.map(element => {\n    const imgLink = element.profile_path\n      ? `https://image.tmdb.org/t/p/w500${element.profile_path}`\n      : placeholder;\n    return (\n      <li className={style.item} key={element.credit_id}>\n        <img className={style.photo} src={imgLink} alt={element.name} />\n        <p className={style.text}>\n          <b>{element.name}</b>\n        </p>\n        <p className={style.text}>{element.character}</p>\n      </li>\n    );\n  });\n  return <ul className={style.castlist}>{elements}</ul>;\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst movieInstance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0b81ec7b97ebe28b2ec2748d1e4054f2',\n    language: `en-US`,\n  },\n});\n\nexport const getMovies = () => movieInstance.get('/trending/movie/day');\n\nexport const getMovieByID = id => movieInstance.get(`/movie/${id}`);\n\nexport const getCastByID = id => movieInstance.get(`/movie/${id}/credits`);\n\nexport const getReviewsByID = id => movieInstance.get(`/movie/${id}/reviews`);\n\nexport const getMovieBySearch = query =>\n  movieInstance.get(`/search/movie?query=${query}`);\n"],"names":["useState","state","setState","movieID","useParams","useEffect","getCastInfo","getCastByID","response","data","cast","console","log","elements","map","element","imgLink","profile_path","placeholder","className","style","src","alt","name","character","credit_id","movieInstance","axios","baseURL","params","api_key","language","getMovies","get","getMovieByID","id","getReviewsByID","getMovieBySearch","query"],"sourceRoot":""}